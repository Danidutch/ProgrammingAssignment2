
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: i386-w64-mingw32/i386 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> makeCacheMatrix: This function creates a special "matrix" object that can cache its inverse.
Error: unexpected 'function' in "makeCacheMatrix: This function"
> makeCacheMatrix <- function(x = matrix()) {
+ i <- NULL
+ set <- function(y) {
+ x<<- y
+ i <<- NULL
+ 
+ }
+ 
+ get <- function() x
+ setInverse <- function(inverse) i <<- inverse
+ getInverse <- function() i
+ list(set = set,
+ setInverse = setInverse,
+ getInverse = getInverse)
+ 
+ }
> 
> 
> ## this second function computes the inverse of the special "matrix"
> 
> cacheSolve <- function(x, ...) {
+ 
+ i <- x$getInverse()
+ if (!is.null(i)) {
+ message("getting cached data")
+ return(i)
+ }
+ mat <- x$get()
+ i <- solve(mat, ...)
+ x$setInverse(i)
+ i
+ }
